// Generated by CoffeeScript 1.6.3
(function() {
  var ExtensionOptions;

  ExtensionOptions = (function() {
    var AJAX_TIME_OUT, API_KEY, HOST, ID, MESSAGE_DURATION, USER, loadUser, restoreOptions, saveFail, saveOptions, saveSucess, setupEventBinding, showSettingsPage;

    function ExtensionOptions() {}

    API_KEY = "ApiKey";

    HOST = "Host";

    ID = "userId";

    USER = "/users/current.json";

    AJAX_TIME_OUT = 30 * 1000;

    MESSAGE_DURATION = 2000;

    /*
     Initialize Option page.
    */


    ExtensionOptions.prototype.init = function() {
      setupEventBinding();
      return restoreOptions();
    };

    /*
     Setup page navigation events
    */


    setupEventBinding = function() {
      $("#navigation").on("click", "li", function() {
        return showSettingsPage(this.attributes.getNamedItem("controls").value);
      });
      return $("#saveButton").on("click", function() {
        return saveOptions();
      });
    };

    /*
     Show settig page which clicked by user
    */


    showSettingsPage = function(controlsAttribute) {
      if (controlsAttribute === "general") {
        $("#general").addClass("pageSelected");
        $("#about").removeClass("pageSelected");
        $("#navGeneral").addClass("selected");
        return $("#navAbout").removeClass("selected");
      } else if (controlsAttribute === "about") {
        $("#about").addClass("pageSelected");
        $("#general").removeClass("pageSelected");
        $("#navAbout").addClass("selected");
        return $("#navGeneral").removeClass("selected");
      }
    };

    /*
     save
    */


    saveOptions = function() {
      var apiKey, host;
      apiKey = $("#" + API_KEY).val();
      host = $("#" + HOST).val();
      return loadUser(host, apiKey).then(saveSucess, saveFail);
    };

    /*
     sucess to save
    */


    saveSucess = function(res) {
      var status;

      localStorage[API_KEY] = res.apiKey;
      localStorage[HOST] = res.host;
      localStorage[ID] = res.id;
      status = $("#status");
      status.html("Options Saved.");
      return setTimeout(function() {
        return status.html("");
      }, MESSAGE_DURATION);
    };

    /*
     fail to save
    */


    saveFail = function(res) {
      var status;

      status = $("#status");
      status.html("Save Failed. " + res);
      return setTimeout(function() {
        return status.html("");
      }, MESSAGE_DURATION);
    };

    /*
     restore
    */


    restoreOptions = function() {
      var apiKey, host;

      apiKey = localStorage[API_KEY];
      host = localStorage[HOST];
      if ((apiKey == null) || (host == null)) {
        return;
      }
      $("#" + API_KEY).val(apiKey);
      return $("#" + HOST).val(host);
    };

    /*
     Load the user ID associated to Api Key.
    */


    loadUser = function(host, apiKey) {
      var d;

      d = new $.Deferred;
      $.ajax({
        type: "GET",
        url: host + USER,
        contentType: "application/json",
        headers: {
          "X-Redmine-API-Key": apiKey
        },
        timeout: AJAX_TIME_OUT
      }).then(function(msg) {
        var _ref;

        if ((msg != null ? (_ref = msg.user) != null ? _ref.id : void 0 : void 0) != null) {
          return d.resolve({
            host: host,
            apiKey: apiKey,
            id: msg.user.id
          });
        } else {
          return d.reject(msg);
        }
      }, function(msg) {
        return d.reject("faild to load user");
      });
      return d.promise();
    };

    return ExtensionOptions;

  })();

  $(function() {
    var extensionOptions;

    extensionOptions = new ExtensionOptions();
    return extensionOptions.init();
  });

}).call(this);
